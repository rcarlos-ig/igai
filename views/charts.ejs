<%- include('partials/header.ejs'); %>

<div class="card w-full">
  <div class="w-full">
    <h2>Gráficos</h2>
    <div class="mt-8 px-4">
      <h3 class="capitalize" id="graphTitle">Instalações</h3>
      <div class="md:w-2/3 h-[500px] mt-4 mx-auto">
        <canvas id="chart"></canvas>
      </div>
    </div>
    <div class="flex flex-col mx-auto mt-12 px-4 sm:w-1/2 lg:w-1/4">
      <h3>Selecionar os dados</h3>
      <div class="w-full mt-4">
        <select
          name="fieldSelect"
          id="fieldSelect"
          class="capitalize w-full"
          aria-label="Selecione um campo para criação do gráfico."
        >
          <% for (let i = 4; i < 12; i++) { %>
          <option class="capitalize" value="<%= fields[i][0] %>">
            <%= fields[i][0] %>
          </option>
          <% } %>
        </select>
      </div>
      <div class="flex justify-end gap-4 mt-4">
        <button
          type="button"
          class="button button-tertiary"
          onclick="window.location='/dashboard'"
        >
          Retornar
        </button>
        <button
          type="button"
          class="button button-primary"
          onclick="updateChart()"
        >
          Selecionar
        </button>
      </div>
    </div>
  </div>
</div>

<script src="/js/chart-3.7.1.min.js"></script>

<% if (locals.data) { %>
  <script>
    const activeSchools = <%- JSON.stringify(activeSchools) %>;
    const ctx = document.getElementById("chart");
    const data = <%- JSON.stringify(data) %>;
    const colors = [
      "rgb(149, 195, 252)",
      "rgb(78, 155, 250)",
      "rgb(8, 116, 247)",
      "rgb(5, 82, 177)",
      "rgb(3, 49, 106)",
      "rgb(1, 16, 35)",
    ];

    Chart.defaults.font.family = "'Jost', sans-serif";
    Chart.defaults.font.size = 16;
    Chart.defaults.font.lineHeight = 1.25;
    Chart.defaults.color = "rgb(16, 21, 25)";
    Chart.defaults.borderColor = "rgb(107, 114, 128)";

    if (typeof html === undefined) {
      const html = document.getElementById("html");
    }

    if (html.classList.contains("dark"))
      Chart.defaults.color = "rgb(249, 250, 251)";

    const total = (tooltipItems) => {
      let soma = 0;

      tooltipItems.forEach(item => {
        soma += item.raw;
      })
      return soma;
    };

    const options = {
        locale: "pt-BR",
        responsive: true,
        scales: {
          x: {
            stacked: true,
            grid: {
              borderWidth: 2,
              color: Chart.defaults.borderColor,
            },
          },
          y: {
            stacked: true,
            display: false,
          },
        },
        layout: {
          padding: 15,
        },
        interaction: {
          mode: "index",
        },
        plugins: {
          legend: {
            position: "bottom",
          },
        },
        maintainAspectRatio: false,
      }

    const chart = new Chart(ctx, {
      type: "bar",
      data: data,
      options: options,
    });

    chart.data.datasets.forEach((dataset, index) => {
      dataset.backgroundColor = colors[index];
    });
    chart.update();

    function updateChart() {
      const labels = [
        "Não se aplica",
        "Nota 1",
        "Nota 2",
        "Nota 3",
        "Nota 4",
        "Nota 5",
      ];
      const field = document.getElementById("fieldSelect").value;
      const datasets = [];

      for (const key in activeSchools[0][field]) {
        if (Object.hasOwnProperty.call(activeSchools[0][field], key)) {
          datasets.push({label: key, data: [0, 0, 0, 0, 0, 0]})
        }
      };

      activeSchools.forEach(school => {        
        datasets.forEach(data => {
          const label = data.label;
          switch (school[field][label]) {
            case 1:
              data.data[1] += 1;
              break;
  
            case 2:
              data.data[2] += 1;
              break;
  
            case 3:
              data.data[3] += 1;
              break;
  
            case 4:
              data.data[4] += 1;
              break;
  
            case 5:
              data.data[5] += 1;
              break;
  
            default:
              data.data[0] += 1;
              break;
          }
        })
      });

      const data = {
        labels: labels,
        datasets: datasets,
      };

      const originalText = [
        "codigo",
        "ocupacao",
        "avaliacao",
        "instalacoes",
        "eletricas",
        "hidraulicas",
        "sanitarias",
        "impermeabilizacao",
        "predio",
        "reservatorio",
        "cercaTela",
        "iluminacao",
        "calcada"
      ];

      const replacedText = [
        "código",
        "ocupação",
        "avaliação",
        "instalações",
        "elétricas",
        "hidráulicas",
        "sanitárias",
        "impermeabilização",
        "prédio",
        "reservatório",
        "Cerca/Tela",
        "iluminação",
        "calçada"
      ];

      originalText.forEach((text, index) => {
        data.datasets.forEach(dataset => {
          if (dataset.label === text) dataset.label = replacedText[index];
        })
      })

      data.datasets.forEach(dataset => {
        dataset.label = dataset.label.charAt(0).toUpperCase() + dataset.label.slice(1);
      })
      
      chart.data = data;
      chart.options = options;
      chart.data.datasets.forEach((dataset, index) => {
        dataset.backgroundColor = colors[index];
      });
      chart.update();

      document.getElementById("graphTitle").textContent = field;

      originalText.forEach((text, index) => {        
        if (document.getElementById("graphTitle").textContent === text) {
          document.getElementById("graphTitle").textContent = replacedText[index];
        }        
      })
    }
  </script>
<% } %>

<%- user.role === 'admin' ? include('partials/logoutButtonAdmin.ejs') : include('partials/logoutButtonBasic.ejs'); %>
<%- include('partials/footer.ejs'); %>
